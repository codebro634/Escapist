 import java.awt.Graphics;
 import java.awt.image.BufferedImage;
 import java.util.ArrayList;
 
 public class T_shooting
   extends Tiles
 {
   private static final byte ID = 6;
   private static final BufferedImage image = Controle.shootingBlock; private final byte direction;
   private final byte missileSpeed;
   private final short missileRate;
   private ArrayList<missile> missiles;
   private long lastshot;
   
   T_shooting(boolean isAutoGenerated, short x, short y, byte direction, byte missileSpeed, short missileRate) { 

     super(isAutoGenerated);   
     this.missiles = new ArrayList<>();
     this.Xpos = x;
     this.Ypos = y;
     this.direction = direction;
     this.missileSpeed = missileSpeed;
     this.missileRate = missileRate; } void render(Graphics g) {
     if (System.currentTimeMillis() - this.lastshot > this.missileRate) {
       this.lastshot = System.currentTimeMillis();
       this.missiles.add(new missile((short)(this.Xpos + 12), (short)(this.Ypos + 12), this.direction, this.missileSpeed));
     } 
     
     for (int i = 0; i < this.missiles.size(); i++) {
       if (((missile)this.missiles.get(i)).isActive) {
         ((missile)this.missiles.get(i)).main(g);
       } else {
         this.missiles.remove(i);
       } 
     } 
     g.drawImage(getImage(), this.Xpos, this.Ypos, 50, 50, null);
   }
   
   protected BufferedImage getImage() {
     return image;
   }
   
   protected byte getID() {
     return 6;
   }
   
   protected String getArgs() {
     if (this.isAutoGenerated)
       return null; 
     return String.valueOf(this.Xpos) + "," + this.Ypos + "," + this.direction + "," + this.missileSpeed + "," + this.missileRate + "/";
   }
   
   protected void main() {}
 }