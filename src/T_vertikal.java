 import java.awt.Rectangle;
 import java.awt.image.BufferedImage;
 
 public class T_vertikal
   extends Tiles
 {
   private static final byte ID = 5;
   private static final BufferedImage image = Controle.vertikalBlock;
   
   private final short startY;
   private final short zielY;
   private final byte movespeed;
   
   T_vertikal(boolean isAutoGenerated, short startY, short zielY, short x, byte movespeed) {
     super(isAutoGenerated);
     if (startY > zielY) {
       this.upToDown = true;
       this.zielY = startY;
       this.startY = zielY;
     } else {
       
       this.zielY = zielY;
       this.startY = startY;
     } 
     this.Ypos = startY;
     this.Xpos = x;
     this.movespeed = movespeed;
   }
   private boolean upToDown; private boolean nachOben; private boolean playerStands;
   protected BufferedImage getImage() {
     return image;
   }
   
   protected byte getID() {
     return 5;
   }
   
   protected String getArgs() {
     if (this.isAutoGenerated)
       return null; 
     if (this.upToDown)
       return String.valueOf(this.zielY) + "," + this.startY + "," + this.Xpos + "," + this.movespeed + "/"; 
     return String.valueOf(this.startY) + "," + this.zielY + "," + this.Xpos + "," + this.movespeed + "/";
   }
   
   protected short[] realPos() {
     return new short[] { this.Xpos, this.Ypos };
   }
   
   protected void main() {
     move();
     movePlayer();
   }
 
   
   private void movePlayer() {
     int playerX = Player.getX(), playerY = Player.getY(), width = 30, height = 45;
     short amount = 0;
     
     while (true) {
       if (!intersection(true, playerX, playerY + amount, width, height)) {
         Player.setY(playerY + amount);
         break;
       } 
       if (!intersection(true, playerX, playerY - amount, width, height)) {
         Player.setY(playerY - amount);
         break;
       } 
       amount = (short)(amount + 1);
     } 
     
     if (amount == 0 && this.playerStands) {
       Player.setY(this.Ypos - 45);
       if (Tiles.doesIntersect(true, Player.getX(), Player.getY(), 30, 45)) {
         Player.setY(playerY);
       }
     } 
   }
 
 
   
   private void move() {
     this.playerStands = (new Rectangle(this.Xpos, this.Ypos, 50, 50)).intersects(new Rectangle(Player.getX(), Player.getY() + 1, 30, 45));
     
     if (this.nachOben) {
       this.Ypos = (short)(this.Ypos - this.movespeed);
       if (this.Ypos <= this.startY) {
         this.Ypos = this.startY;
         this.nachOben = false;
       } 
     } else {
       
       this.Ypos = (short)(this.Ypos + this.movespeed);
       if (this.Ypos >= this.zielY) {
         this.Ypos = this.zielY;
         this.nachOben = true;
       } 
     } 
   }
 }